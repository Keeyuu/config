;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-char-history Info-search-history xref--read-identifier-history counsel-flycheck-errors-history sql-user-history counsel-ibuffer-history counsel-grep-history compile-history bookmark-history query-replace-history buffer-name-history read-number-history imenu--history-list counsel-git-grep-history shell-command-history goto-line-history coding-system-history read-expression-history tmm--history empty-history woman-topic-history evil-ex-history yes-or-no-p-history ivy-history swiper-history counsel-M-x-history file-name-history minibuffer-history extended-command-history))
(setq counsel-ibuffer-history '(#("dash" 0 4 (ivy-index 0)) #(" *%  *vterm*                 1752 VTerm            (vterm run)" 0 62 (ivy-index 1 idx 1)) #("ter" 0 3 (ivy-index 0)) " *   main.go                 1336 Go               ~/code/self/new-tool/watermark/main.go" #(" *   init.el                 2821 ELisp/d          ~/.emacs.d/init.el" 0 69 (idx 2 ivy-index 2)) #("     search.go              13619 Go               ~/code/company/probation/src/probation/admin/logic/search.go" 0 111 (idx 1 ivy-index 1)) #(" *%  *vterm*                 9567 VTerm            (vterm run)" 0 62 (idx 3 ivy-index 3)) #(" *   logic_inside.go        36787 Go               ~/code/company/probation/src/probation/admin/logic/logic_inside.go" 0 117 (idx 1 ivy-index 1)) #("v" 0 1 (ivy-index 0)) " *%  *vterm*                 7012 VTerm            (vterm run)" " *%  *vterm*                 6285 VTerm            (vterm run)" #("     logic_inside.go        36693 Go               ~/code/company/probation/src/probation/admin/logic/logic_inside.go" 0 117 (idx 1 ivy-index 1)) #("     logic_inside.go        36603 Go               ~/code/company/probation/src/probation/admin/logic/logic_inside.go" 0 117 (idx 1 ivy-index 1)) " *%  *vterm*                 4831 VTerm            (vterm run)" " *%  *vterm*                 4104 VTerm            (vterm run)" #("proba" 0 5 (ivy-index 4)) "     probation.go           10403 Go               ~/code/company/probation/src/probation/admin/model/probation.go" #(" *%  *vterm*                 3377 VTerm            (vterm run)" 0 62 (idx 1 ivy-index 1)) #("     logic_inside.go        36500 Go               ~/code/company/probation/src/probation/admin/logic/logic_inside.go" 0 117 (idx 1 ivy-index 1)) #(" *%  *vterm*                 2650 VTerm            (vterm run)" 0 62 (idx 1 ivy-index 1)) #("     logic_inside.go        36494 Go               ~/code/company/probation/src/probation/admin/logic/logic_inside.go" 0 117 (idx 1 ivy-index 1)) #(" *%  *vterm*                 1928 VTerm            (vterm run)" 0 62 (idx 3 ivy-index 3)) " *%  *vterm*                  937 VTerm            (vterm run)" #(" *   probation_contr...     26791 Go               ~/code/company/probation/src/probation/admin/controller/probation_controller.go" 0 130 (idx 2 ivy-index 2)) #("     logic_inside.go        36489 Go               ~/code/company/probation/src/probation/admin/logic/logic_inside.go" 0 117 (idx 1 ivy-index 1)) #("lsp" 0 3 (ivy-index 0)) " *   *lsp-bridge*           33485 Fundamental      (*lsp-bridge* run)" #("     main.go                 1194 Go               ~/code/company/probation/src/probation/admin/main.go" 0 103 (ivy-index 1 idx 1)) " *%  *dashboard*              781 Dashboard        " #(" *%  *vterm*                 7240 VTerm            (vterm run)" 0 62 (ivy-index 1 idx 1)) #("     lisp.el                 3247 ELisp/d          ~/.emacs.d/lisp/lisp.el" 0 74 (ivy-index 1 idx 1)) #("     lisp.el                 3176 ELisp/d          ~/.emacs.d/lisp/lisp.el" 0 74 (idx 1 ivy-index 1))))
(setq bookmark-history '(#("apply" 0 5 (ivy-index 0)) #("yes" 0 3 (ivy-index 0))))
(setq query-replace-history '("yes" "evil"))
(setq buffer-name-history '(#("*Clippy*" 0 8 (ivy-index 0)) #("*terminal*" 0 10 (ivy-index 0)) #("*shell*" 0 7 (ivy-index 0)) #("*Help*" 0 6 (ivy-index 0)) #("*Packages*" 0 10 (ivy-index 0))))
(setq read-number-history '("7"))
(setq imenu--history-list '(#("查看端口被占用" 0 7 (ivy-index 5 idx 4))))
(setq counsel-git-grep-history '(#("ensure" 0 6 (ivy-index 1)) "lisp/lisp.el:4:(setq use-package-always-ensure t" #("smart" 0 5 (ivy-index 2)) "lisp/lisp.el:115:(use-package smart-mode-line-atom-one-dark-theme)" #("NODE_STAFF_CONFIRM" 0 18 (ivy-index 3)) "src/probation/admin/logic/logic_inside.go:332:		Type:     NODE_STAFF_CONFIRM," "src/probation/admin/logic/logic_inside.go:413:	SearchMap.Do(nil, &model.EvaluationLineNode{UserId: dbItem.Id, Status: NODE_PASS, Type: NODE_STAFF_CONFIRM}, dbItem)" #("posframe" 0 8 (ivy-index 2)) "lisp/lsp.el:17:(use-package posframe)" #("project" 0 7 (ivy-index 0)) #("user" 0 4 (ivy-index 0)) "tool/Linux创建、挂载、卸载文件系统.md:53:13107 blocks (5.00%) reserved for the super user" #("p" 0 1 (ivy-index 0))))
(setq shell-command-history '("/bin/zsh"))
(setq goto-line-history '("30" "100"))
(setq tmm--history '("h==>Help" "p==>Projectile" "T==>Text" "m==>Markdown" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq evil-ex-history '(#("'<,'>re" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7)) #("drag-stuff-up" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("windmove-left" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("'<,'>evil-previous-visual-line" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30)) #("evil-previous-visual-line" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25)) #("drag-stuff-up" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("'<,'>re" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7)) #("counsel-M-x" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11))))
(setq yes-or-no-p-history '("yes" "no" "yes" "no"))
(setq ivy-history '(#("ini" 0 3 (ivy-index 0)) "init.el" #("key" 0 3 (ivy-index 0)) "/Users/keeyu/.emacs.d/lisp/keymap.el" #("demo" 0 4 (ivy-index 0)) "lisp/demo.el" "/Users/keeyu/.emacs.d/lisp/keymap.el" #("v" 0 1 (ivy-index 0)) "*vterm*" #("src/main.rs" 0 11 (ivy-index 4)) #("~/code/self/new-tool/color/" 0 27 (ivy-index 2)) #("wor" 0 3 (ivy-index 0)) "work.md" #("do" 0 2 (ivy-index 0)) "~/Library/Mobile Documents/com~apple~CloudDocs/note/doc/" #("main.rs" 0 7 (ivy-index 1)) "/Users/keeyu/code/self/new-tool/color/src/main.rs" #("main" 0 4 (ivy-index 1)) "/Users/keeyu/code/self/tool/color/src/main.rs" #("*vterm*" 0 7 (ivy-index 1)) #("main.rs<new-tool>" 0 17 (ivy-index 1)) #("sc" 0 2 (ivy-index 0)) "script.md" #("temp" 0 4 (ivy-index 0)) "main.rs<tool>" #("color" 0 5 (ivy-index 3)) "color/Cargo.toml" #("tom" 0 3 (ivy-index 0)) "c_test/foo/Cargo.toml" "main.rs<tool>" "main.rs<tool>" #("tem" 0 3 (ivy-index 0)) "work.md" #("ag" 0 2 (ivy-index 0)) "aganda.md" #("e" 0 1 (ivy-index 0)) "emacs.md" #("emacs" 0 5 (ivy-index 5)) "/Users/keeyu/note/edit/emacs.md" #("work" 0 4 (ivy-index 6)) "work/work.md" #("aga" 0 3 (ivy-index 0)) "/Users/keeyu/Library/Mobile Documents/com~apple~CloudDocs/note/doc/aganda.md" #("ke" 0 2 (ivy-index 0)) "keymap.el" #("*scratch*" 0 9 (ivy-index 3)) #("lsp" 0 3 (ivy-index 0)) "/Users/keeyu/.emacs.d/lisp/lsp.el" #("init.el" 0 7 (ivy-index 0)) #("lisp/lsp.el" 0 11 (ivy-index 0)) #("main.go" 0 7 (ivy-index 1)) #("logic" 0 5 (ivy-index 3)) "src/probation/admin/logic/logic_inside.go" #("~/code/company/probation/" 0 25 (ivy-index 2)) #("in" 0 2 (ivy-index 0)) "/Users/keeyu/.emacs.d/init.el" #("~/.emacs.d/" 0 11 (ivy-index 1)) "aganda.md" #("*dashboard*" 0 11 (ivy-index 1)) #("logic_inside.go" 0 15 (ivy-index 1)) #("ter" 0 3 (ivy-index 0)) #("search.go" 0 9 (ivy-index 1)) #("/Users/keeyu/code/company/probation/src/probation/admin/logic/search.go" 0 71 (ivy-index 1)) #("/Users/keeyu/code/company/probation/src/probation/admin/logic/logic_inside.go" 0 77 (ivy-index 0)) #("t" 0 1 (ivy-index 0)) #("log" 0 3 (ivy-index 0)) #("src/probation/admin/logic/conf.go" 0 33 (ivy-index 0)) #("probation_controller.go" 0 23 (ivy-index 1)) #("src/probation/admin/model/probation.go" 0 38 (ivy-index 0)) #("logic_in" 0 8 (ivy-index 0)) #("golang" 0 6 (ivy-index 2)) "lang/golang.md" #("~/Library/Mobile Documents/com~apple~CloudDocs/note/doc/" 0 56 (ivy-index 4)) #("src/probation/admin/logic/logic_inside.go" 0 41 (ivy-index 1)) #("main.go<admin>" 0 14 (ivy-index 3)) #("src/probation/go.mod" 0 20 (ivy-index 0)) "*lsp-bridge*" #("/Users/keeyu/.emacs.d/init.el" 0 29 (ivy-index 0)) #("lisp" 0 4 (ivy-index 4)) "/Users/keeyu/.emacs.d/lisp/lisp.el" "/Users/keeyu/.emacs.d/lisp/keymap.el" "/Users/keeyu/.emacs.d/lisp/demo.el" "/Users/keeyu/.emacs.d/lisp/keymap.el" #("common/admin/user.go" 0 20 (ivy-index 2)) #("~/code/company/xutil/" 0 21 (ivy-index 2)) "keymap.el" "keymap.el" "/Users/keeyu/.emacs.d/lisp/keymap.el" #("go" 0 2 (ivy-index 0)) "/Users/keeyu/code/company/xutil/https/request.go" "keymap.el" #("session.go" 0 10 (ivy-index 1)) #("go-mode" 0 7 (ivy-index 6)) "lsp.el" "keymap.el" "keymap.el" #("lisp.el" 0 7 (ivy-index 1)) #("li" 0 2 (ivy-index 0)) "lsp.el"))
(setq swiper-history '(#("c-p" 0 3 (ivy-index 0)) #("51      (evil-define-key '(normal visual) 'global (kbd \"C-p\") 'next-ten-lines);向下移动行)" 0 1 (swiper-line-number 51) 4 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-2-face)) 9 24 (fontified t face font-lock-keyword-face) 24 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-3-face)) 27 40 (fontified t) 40 41 (fontified t face (rainbow-delimiters-depth-3-face)) 41 50 (fontified t) 50 51 (fontified t face (rainbow-delimiters-depth-3-face)) 51 55 (fontified t) 55 60 (fontified t face font-lock-string-face) 60 61 (fontified t face (rainbow-delimiters-depth-3-face)) 61 77 (fontified t) 77 78 (fontified t face (rainbow-delimiters-depth-2-face)) 78 79 (fontified t face font-lock-comment-delimiter-face) 79 85 (fontified t face font-lock-comment-face)) "next-ten-lines" #("previous-ten-lines" 0 18 (ivy-index 1)) #("52      (evil-define-key '(normal visual) 'global (kbd \"C-n\") 'previous-ten-lines);向下移动行)" 0 1 (swiper-line-number 52) 4 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-2-face) fontified t) 9 24 (face font-lock-keyword-face fontified t) 24 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-3-face) fontified t) 27 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-3-face) fontified t) 41 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-3-face) fontified t) 51 55 (fontified t) 55 60 (face font-lock-string-face fontified t) 60 61 (face (rainbow-delimiters-depth-3-face) fontified t) 61 63 (fontified t) 63 70 (fontified t) 70 71 (rear-nonsticky t fontified t) 71 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 83 (face font-lock-comment-delimiter-face fontified t) 83 89 (face font-lock-comment-face fontified t)) #("43      (evil-define-key '(normal visual) 'global (kbd \"C-p\") 'scroll-down-command);向下移动行)" 0 1 (swiper-line-number 43) 4 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-2-face) fontified t) 9 24 (face font-lock-keyword-face fontified t) 24 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-3-face) fontified t) 27 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-3-face) fontified t) 41 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-3-face) fontified t) 51 55 (fontified t) 55 60 (face font-lock-string-face fontified t) 60 61 (face (rainbow-delimiters-depth-3-face) fontified t) 61 82 (fontified t) 82 83 (face (rainbow-delimiters-depth-2-face) fontified t) 83 84 (face font-lock-comment-delimiter-face fontified t) 84 90 (face font-lock-comment-face fontified t)) #("base" 0 4 (ivy-index 0)) #("28   func baseImageForTest() image.Image {" 0 1 (swiper-line-number 28) 5 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 11 (face font-lock-function-name-face fontified t) 11 26 (face font-lock-function-name-face fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t) 28 29 (fontified t) 29 40 (face font-lock-type-face fontified t) 40 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t)) #("main" 0 4 (ivy-index 1)) #("18   func main() {" 0 1 (swiper-line-number 18) 5 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 14 (face font-lock-function-name-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t)) #("draw" 0 4 (ivy-index 0)) #("7    	\"image/draw\"" 0 1 (swiper-line-number 7) 5 6 (fontified t) 6 18 (face font-lock-string-face fontified t)) #(".base" 0 5 (ivy-index 2)) #("47   	anyhow, err := AddWatermarkForImage(baseImageForTest(), \"adsfasfa\")" 0 1 (swiper-line-number 47) 5 6 (fontified t) 6 12 (face font-lock-variable-name-face fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 17 (face font-lock-variable-name-face fontified t) 17 18 (fontified t) 18 20 (fontified t) 20 21 (fontified t) 21 41 (face font-lock-function-name-face fontified t) 41 42 (face (rainbow-delimiters-depth-2-face) fontified t) 42 58 (face font-lock-function-name-face fontified t) 58 59 (face (rainbow-delimiters-depth-3-face) fontified t) 59 60 (face (rainbow-delimiters-depth-3-face) fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 72 (face font-lock-string-face fontified t) 72 73 (face (rainbow-delimiters-depth-2-face) fontified t)) #("NODE" 0 4 (ivy-index 0)) #("59       let node = Regex::new(\"NODE\").expect(\"regex caller err\");" 0 1 (swiper-line-number 59) 5 9 (fontified t) 9 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 17 (face font-lock-variable-name-face fontified t) 17 20 (fontified t) 20 25 (face font-lock-type-face fontified t) 25 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t) 31 37 (face font-lock-string-face fontified t) 37 38 (face (rainbow-delimiters-depth-2-face) fontified t) 38 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-2-face) fontified t) 46 64 (face font-lock-string-face fontified t) 64 65 (face (rainbow-delimiters-depth-2-face) fontified t) 65 66 (fontified t)) #("text" 0 4 (ivy-index 4)) #("90   	width, height := int(fontSize)*len(text), int(fontSize)*2" 0 1 (swiper-line-number 90) 5 6 (fontified t) 6 11 (face font-lock-variable-name-face fontified t) 11 13 (fontified t) 13 19 (face font-lock-variable-name-face fontified t) 19 23 (fontified t) 23 26 (face font-lock-function-name-face fontified t) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t) 27 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t) 36 37 (fontified t) 37 40 (face font-lock-builtin-face fontified t) 40 41 (face (rainbow-delimiters-depth-2-face) fontified t) 41 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-2-face) fontified t) 46 48 (fontified t) 48 51 (face font-lock-function-name-face fontified t) 51 52 (face (rainbow-delimiters-depth-2-face) fontified t) 52 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-2-face) fontified t) 61 63 (fontified t)) #("uid" 0 3 (ivy-index 1)) #("65   	watermark, err := MakeImageByText(uid, color.Transparent)" 0 1 (swiper-line-number 65) 5 6 (fontified t) 6 15 (face font-lock-variable-name-face fontified t) 15 17 (fontified t) 17 20 (face font-lock-variable-name-face fontified t) 20 24 (fontified t) 24 39 (face font-lock-function-name-face fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 62 (fontified t) 62 63 (face (rainbow-delimiters-depth-2-face) fontified t)) #("sf" 0 2 (ivy-index 0)) #("49      (evil-define-key '(normal) 'global (kbd \"<leader>sf\") 'project-find-file);选buff" 0 1 (swiper-line-number 49) 4 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-2-face) fontified t) 9 24 (face font-lock-keyword-face fontified t) 24 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-3-face) fontified t) 27 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-3-face) fontified t) 34 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-3-face) fontified t) 44 48 (fontified t) 48 60 (face font-lock-string-face fontified t) 60 61 (face (rainbow-delimiters-depth-3-face) fontified t) 61 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-2-face) fontified t) 81 82 (face font-lock-comment-delimiter-face fontified t) 82 87 (face font-lock-comment-face fontified t)) #("lisp" 0 4 (ivy-index 1)) #("72  (require 'lisp)" 0 1 (swiper-line-number 72) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 12 (face font-lock-keyword-face fontified t) 12 14 (fontified t) 14 18 (face font-lock-constant-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t)) "lsip" "rust" "func" #("super-save" 0 10 (ivy-index 0)) #("5188    super-save                     20220531.1745  available    melpa    Auto-save buffers, based on your activity." 0 1 (swiper-line-number 5188) 6 8 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil)) 8 18 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Package" action package-menu-describe-package package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) follow-link t font-lock-face package-name face package-name category default-button button (t)) 18 19 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Package") 19 39 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Package" display (space :align-to 33)) 39 52 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Version" help-echo #("Version: 20220531.1745" 9 22 (font-lock-face package-status-available)) font-lock-face package-status-available) 52 53 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Version") 53 54 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Version" display (space :align-to 48)) 54 63 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Status" help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) font-lock-face package-status-available) 63 64 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Status") 64 67 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Status" display (space :align-to 61)) 67 72 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Archive" help-echo #("Archive: melpa" 9 14 (font-lock-face package-status-available)) font-lock-face package-status-available) 72 73 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Archive") 73 76 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Archive" display (space :align-to 70)) 76 118 (tabulated-list-entry [("super-save" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) action package-menu-describe-package) #("20220531.1745" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Auto-save buffers, based on your activity." 0 42 (font-lock-face package-description))] tabulated-list-id #s(package-desc super-save (20220531 1745) "Auto-save buffers, based on your activity." ((emacs (24 4))) single "melpa" nil ((:commit . "6f6512bc44b09f7187e58772892fa330f4518c12") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com") (:keywords "convenience") (:url . "https://github.com/bbatsov/super-save")) nil) tabulated-list-column-name "Description" help-echo #("Description: Auto-save buffers, based on your activity." 13 55 (font-lock-face package-description)) font-lock-face package-description)) #("auto" 0 4 (ivy-index 1)) #("46  (auto-save-mode 1)" 0 1 (swiper-line-number 46) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t)) #("edit" 0 4 (ivy-index 0)) #("887   func editNodeV2(index int, node *model.EvaluationLineNode, dbItem *model.Staff, item *model.StaffInternal) error {" 0 1 (swiper-line-number 887) 6 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 21 (face font-lock-function-name-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 27 (face font-lock-variable-name-face fontified t) 27 28 (fontified t) 28 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 37 (face font-lock-variable-name-face fontified t) 37 39 (fontified t) 39 63 (face font-lock-type-face fontified t) 63 65 (fontified t) 65 71 (face font-lock-variable-name-face fontified t) 71 73 (fontified t) 73 84 (face font-lock-type-face fontified t) 84 86 (fontified t) 86 90 (face font-lock-variable-name-face fontified t) 90 92 (fontified t) 92 111 (face font-lock-type-face fontified t) 111 112 (face (rainbow-delimiters-depth-1-face) fontified t) 112 113 (fontified t) 113 118 (face font-lock-type-face fontified t) 118 119 (fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t)) #("regul" 0 5 (ivy-index 7)) #("793   func regularApply(dbItem *model.Staff, item *model.StaffInternal, photos []string, comment string) error {" 0 1 (swiper-line-number 793) 6 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 23 (face font-lock-function-name-face fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t) 24 30 (face font-lock-variable-name-face fontified t) 30 32 (fontified t) 32 43 (face font-lock-type-face fontified t) 43 45 (fontified t) 45 49 (face font-lock-variable-name-face fontified t) 49 51 (fontified t) 51 70 (face font-lock-type-face fontified t) 70 72 (fontified t) 72 78 (face font-lock-variable-name-face fontified t) 78 79 (fontified t) 79 80 (face (rainbow-delimiters-depth-2-face) fontified t) 80 81 (face (rainbow-delimiters-depth-2-face) fontified t) 81 87 (face font-lock-type-face fontified t) 87 89 (fontified t) 89 96 (face font-lock-variable-name-face fontified t) 96 97 (fontified t) 97 103 (face font-lock-type-face fontified t) 103 104 (face (rainbow-delimiters-depth-1-face) fontified t) 104 105 (fontified t) 105 110 (face font-lock-type-face fontified t) 110 111 (fontified t) 111 112 (face (rainbow-delimiters-depth-1-face) fontified t)) #("staffNode" 0 9 (ivy-index 1)) #("647   		staffNode = &model.EvaluationLineNode{UserId: dbItem.UserId, Status: NODE_WAIT_TODO, Type: NODE_STAFF_SET_SCORE}" 0 1 (swiper-line-number 647) 6 21 (fontified t) 21 45 (face font-lock-type-face fontified t) 45 46 (face (rainbow-delimiters-depth-3-face) fontified t) 46 52 (face font-lock-constant-face fontified t) 52 61 (fontified t) 61 67 (fontified t) 67 69 (fontified t) 69 75 (face font-lock-constant-face fontified t) 75 93 (fontified t) 93 97 (face font-lock-constant-face fontified t) 97 119 (fontified t) 119 120 (face (rainbow-delimiters-depth-3-face) fontified t)) #("find" 0 4 (ivy-index 2)) #("299  func Find(param *model.SearchParams) (int, []*Record) {" 0 1 (swiper-line-number 299) 5 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 14 (face font-lock-function-name-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 20 (face font-lock-variable-name-face fontified t) 20 22 (fontified t) 22 40 (face font-lock-type-face fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-1-face) fontified t) 43 46 (face font-lock-type-face fontified t) 46 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 50 (face (rainbow-delimiters-depth-2-face) fontified t) 50 51 (fontified t) 51 57 (face font-lock-type-face fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-1-face) fontified t)) #("hist" 0 4 (ivy-index 0)) #("901   		turnHistroyNode(node, nodes[index], index, line, nodes, dbItem, item)" 0 1 (swiper-line-number 901) 6 8 (fontified t) 8 23 (face font-lock-function-name-face fontified t) 23 24 (face (rainbow-delimiters-depth-3-face) fontified t) 24 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-4-face) fontified t) 36 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-4-face) fontified t) 42 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-3-face) fontified t)) #("EvaluationLineNode" 0 18 (ivy-index 6)) #("413   	SearchMap.Do(nil, &model.EvaluationLineNode{UserId: dbItem.Id, Status: NODE_PASS, Type: NODE_STAFF_CONFIRM}, dbItem)" 0 1 (swiper-line-number 413) 6 17 (fontified t) 17 19 (face font-lock-function-name-face fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 23 (face font-lock-constant-face fontified t) 23 26 (fontified t) 26 50 (face font-lock-type-face fontified t) 50 51 (face (rainbow-delimiters-depth-3-face) fontified t) 51 57 (face font-lock-constant-face fontified t) 57 70 (fontified t) 70 76 (face font-lock-constant-face fontified t) 76 89 (fontified t) 89 93 (face font-lock-constant-face fontified t) 93 113 (fontified t) 113 114 (face (rainbow-delimiters-depth-3-face) fontified t) 114 122 (fontified t) 122 123 (face (rainbow-delimiters-depth-2-face) fontified t)) #("478   	SearchMap.Do(nodes[0], &model.EvaluationLineNode{UserId: dbItem.Id, Status: NODE_PASS, Type: NODE_STAFF_SET_SCORE}, dbItem) //生成导师搜索数据" 0 1 (swiper-line-number 478) 6 17 (fontified t) 17 19 (face font-lock-function-name-face fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-3-face) fontified t) 26 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-3-face) fontified t) 28 31 (fontified t) 31 55 (face font-lock-type-face fontified t) 55 56 (face (rainbow-delimiters-depth-3-face) fontified t) 56 62 (face font-lock-constant-face fontified t) 62 75 (fontified t) 75 81 (face font-lock-constant-face fontified t) 81 94 (fontified t) 94 98 (face font-lock-constant-face fontified t) 98 120 (fontified t) 120 121 (face (rainbow-delimiters-depth-3-face) fontified t) 121 129 (fontified t) 129 130 (face (rainbow-delimiters-depth-2-face) fontified t) 130 131 (fontified t) 131 133 (face font-lock-comment-delimiter-face fontified t) 133 141 (face font-lock-comment-face fontified t)) #("589   func nextNode(lastNode bool, dbItem *model.Staff, item *model.StaffInternal, line *model.EvaluationLineInternal, nodes []*model.EvaluationLineNode, result bool, comment string) {" 0 1 (swiper-line-number 589) 6 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 19 (face font-lock-function-name-face fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 28 (face font-lock-variable-name-face fontified t) 28 29 (fontified t) 29 33 (face font-lock-type-face fontified t) 33 35 (fontified t) 35 41 (face font-lock-variable-name-face fontified t) 41 43 (fontified t) 43 54 (face font-lock-type-face fontified t) 54 56 (fontified t) 56 60 (face font-lock-variable-name-face fontified t) 60 62 (fontified t) 62 81 (face font-lock-type-face fontified t) 81 83 (fontified t) 83 87 (face font-lock-variable-name-face fontified t) 87 89 (fontified t) 89 117 (face font-lock-type-face fontified t) 117 119 (fontified t) 119 124 (face font-lock-variable-name-face fontified t) 124 125 (fontified t) 125 126 (face (rainbow-delimiters-depth-2-face) fontified t) 126 127 (face (rainbow-delimiters-depth-2-face) fontified t) 127 128 (fontified t) 128 152 (face font-lock-type-face fontified t) 152 154 (fontified t) 154 160 (face font-lock-variable-name-face fontified t) 160 161 (fontified t) 161 165 (face font-lock-type-face fontified t) 165 167 (fontified t) 167 174 (face font-lock-variable-name-face fontified t) 174 175 (fontified t) 175 181 (face font-lock-type-face fontified t) 181 182 (face (rainbow-delimiters-depth-1-face) fontified t) 182 183 (fontified t) 183 184 (face (rainbow-delimiters-depth-1-face) fontified t)) #("647   		staffNode = &model.EvaluationLineNode{UserId: dbItem.Id, Status: NODE_WAIT_TODO, Type: NODE_STAFF_SET_SCORE}" 0 1 (swiper-line-number 647) 6 21 (fontified t) 21 45 (face font-lock-type-face fontified t) 45 46 (face (rainbow-delimiters-depth-3-face) fontified t) 46 52 (face font-lock-constant-face fontified t) 52 65 (fontified t) 65 71 (face font-lock-constant-face fontified t) 71 89 (fontified t) 89 93 (face font-lock-constant-face fontified t) 93 115 (fontified t) 115 116 (face (rainbow-delimiters-depth-3-face) fontified t)) #("confrim" 0 7 (ivy-index 2)) #("350   	// 	return fmt.Errorf(\"confrim: getLineAndNodes %d\", dbItem.Id)" 0 1 (swiper-line-number 350) 6 7 (fontified t) 7 11 (face font-lock-comment-delimiter-face fontified t) 11 70 (face font-lock-comment-face fontified t)) #("901   		turnHistroyNode(node, nodes[index], index, line, nodes, dbItem, item)" 0 1 (swiper-line-number 901) 6 8 (fontified t) 8 23 (face font-lock-function-name-face fontified t) 23 24 (face (rainbow-delimiters-depth-3-face) fontified t) 24 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-4-face) fontified t) 36 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-4-face) fontified t) 42 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-3-face) fontified t)) #("881   func editNodeV2(index int, node *model.EvaluationLineNode, dbItem *model.Staff, item *model.StaffInternal) error {" 0 1 (swiper-line-number 881) 6 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 21 (face font-lock-function-name-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 27 (face font-lock-variable-name-face fontified t) 27 28 (fontified t) 28 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 37 (face font-lock-variable-name-face fontified t) 37 39 (fontified t) 39 63 (face font-lock-type-face fontified t) 63 65 (fontified t) 65 71 (face font-lock-variable-name-face fontified t) 71 73 (fontified t) 73 84 (face font-lock-type-face fontified t) 84 86 (fontified t) 86 90 (face font-lock-variable-name-face fontified t) 90 92 (fontified t) 92 111 (face font-lock-type-face fontified t) 111 112 (face (rainbow-delimiters-depth-1-face) fontified t) 112 113 (fontified t) 113 118 (face font-lock-type-face fontified t) 118 119 (fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t)) #("880   func editNodeV2(index int, node *model.EvaluationLineNode, dbItem *model.Staff, item *model.StaffInternal) error {" 0 1 (swiper-line-number 880) 6 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 21 (face font-lock-function-name-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 27 (face font-lock-variable-name-face fontified t) 27 28 (fontified t) 28 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 37 (face font-lock-variable-name-face fontified t) 37 39 (fontified t) 39 63 (face font-lock-type-face fontified t) 63 65 (fontified t) 65 71 (face font-lock-variable-name-face fontified t) 71 73 (fontified t) 73 84 (face font-lock-type-face fontified t) 84 86 (fontified t) 86 90 (face font-lock-variable-name-face fontified t) 90 92 (fontified t) 92 111 (face font-lock-type-face fontified t) 111 112 (face (rainbow-delimiters-depth-1-face) fontified t) 112 113 (fontified t) 113 118 (face font-lock-type-face fontified t) 118 119 (fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t)) #("anynode" 0 7 (ivy-index 0)) #("607   func anyNode(userId int64, item *model.StaffInternal, dbItem *model.Staff, result bool, comment, key string) error {" 0 1 (swiper-line-number 607) 6 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 18 (face font-lock-function-name-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 25 (face font-lock-variable-name-face fontified t) 25 26 (fontified t) 26 31 (face font-lock-type-face fontified t) 31 33 (fontified t) 33 37 (face font-lock-variable-name-face fontified t) 37 39 (fontified t) 39 58 (face font-lock-type-face fontified t) 58 60 (fontified t) 60 66 (face font-lock-variable-name-face fontified t) 66 68 (fontified t) 68 79 (face font-lock-type-face fontified t) 79 81 (fontified t) 81 87 (face font-lock-variable-name-face fontified t) 87 88 (fontified t) 88 92 (face font-lock-type-face fontified t) 92 94 (fontified t) 94 101 (face font-lock-variable-name-face fontified t) 101 103 (fontified t) 103 106 (face font-lock-variable-name-face fontified t) 106 107 (fontified t) 107 113 (face font-lock-type-face fontified t) 113 114 (face (rainbow-delimiters-depth-1-face) fontified t) 114 115 (fontified t) 115 120 (face font-lock-type-face fontified t) 120 121 (fontified t) 121 122 (face (rainbow-delimiters-depth-1-face) fontified t)) #("review" 0 6 (ivy-index 8)) #("286   		nextNode.SearchType = ToSearchType(NODE_INDICATOR_REVIEW)" 0 1 (swiper-line-number 286) 6 10 (fontified t) 10 30 (fontified t) 30 42 (face font-lock-function-name-face fontified t) 42 43 (face (rainbow-delimiters-depth-3-face) fontified t) 43 64 (fontified t) 64 65 (face (rainbow-delimiters-depth-3-face) fontified t)) #("apply" 0 5 (ivy-index 2)) #("383  	if err := logic.Apply(userId); err != nil {" 0 1 (swiper-line-number 383) 5 6 (fontified t) 6 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 12 (face font-lock-variable-name-face fontified t) 12 22 (fontified t) 22 27 (face font-lock-function-name-face fontified t) 27 28 (face (rainbow-delimiters-depth-2-face) fontified t) 28 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t) 35 44 (fontified t) 44 47 (face font-lock-constant-face fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t)) #("record" 0 6 (ivy-index 0)) #("72   func (p *ProbationController) GetRecords(param map[string]any) *https.ResponseBody {" 0 1 (swiper-line-number 72) 5 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 12 (face font-lock-variable-name-face fontified t) 12 14 (fontified t) 14 33 (face font-lock-type-face fontified t) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t) 34 35 (fontified t) 35 45 (face font-lock-function-name-face fontified t) 45 46 (face (rainbow-delimiters-depth-1-face) fontified t) 46 51 (face font-lock-variable-name-face fontified t) 51 52 (fontified t) 52 55 (face font-lock-keyword-face fontified t) 55 56 (face (rainbow-delimiters-depth-2-face) fontified t) 56 62 (face font-lock-type-face fontified t) 62 63 (face (rainbow-delimiters-depth-2-face) fontified t) 63 66 (face font-lock-type-face fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t) 67 69 (fontified t) 69 87 (face font-lock-type-face fontified t) 87 88 (fontified t) 88 89 (face (rainbow-delimiters-depth-1-face) fontified t)) #("377  	userId := parser.GetInt64(\"account_user_id\")" 0 1 (swiper-line-number 377 ivy-index 376) 1 5 (ivy-index 376) 5 6 (fontified t ivy-index 376) 6 12 (fontified t face font-lock-variable-name-face ivy-index 376) 12 23 (fontified t ivy-index 376) 23 31 (fontified t face font-lock-function-name-face ivy-index 376) 31 32 (fontified t face (rainbow-delimiters-depth-2-face) ivy-index 376) 32 49 (fontified t face font-lock-string-face ivy-index 376) 49 50 (fontified t face (rainbow-delimiters-depth-2-face) ivy-index 376)) #("378   func apply(dbItem *model.Staff) error { //确认失败 进入 申诉期" 0 1 (swiper-line-number 378) 6 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 16 (face font-lock-function-name-face fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 23 (face font-lock-variable-name-face fontified t) 23 25 (fontified t) 25 36 (face font-lock-type-face fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 38 (fontified t) 38 43 (face font-lock-type-face fontified t) 43 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-1-face) fontified t) 45 46 (fontified t) 46 48 (face font-lock-comment-delimiter-face fontified t) 48 59 (face font-lock-comment-face fontified t)) #("calc" 0 4 (ivy-index 0)) #("169  func (e *EvaluationIndicatorInternal) CalcScore(wightTeacher, wightLeader float64) {" 0 1 (swiper-line-number 169) 5 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 12 (face font-lock-variable-name-face fontified t) 12 14 (fontified t) 14 41 (face font-lock-type-face fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (fontified t) 43 52 (face font-lock-function-name-face fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t) 53 65 (face font-lock-variable-name-face fontified t) 65 67 (fontified t) 67 78 (face font-lock-variable-name-face fontified t) 78 79 (fontified t) 79 86 (face font-lock-type-face fontified t) 86 87 (face (rainbow-delimiters-depth-1-face) fontified t) 87 88 (fontified t) 88 89 (face (rainbow-delimiters-depth-1-face) fontified t)) #("287   		nextNode.SearchType = ToSearchType(NODE_INDICATOR_REVIEW)" 0 1 (swiper-line-number 287) 6 30 (fontified t) 30 42 (face font-lock-function-name-face fontified t) 42 43 (face (rainbow-delimiters-depth-3-face) fontified t) 43 64 (fontified t) 64 65 (face (rainbow-delimiters-depth-3-face) fontified t)) #("276   	ulog.Info(\"review\", zap.Any(\"prepare_indicator\", dbItem.PrepareIndicator), zap.Any(\"scheduler\", dbItem.Scheduler), zap.Any(\"nodeIndex\", nodeIndex), zap.Any(\"result\", result))" 0 1 (swiper-line-number 276) 6 12 (fontified t) 12 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face (rainbow-delimiters-depth-2-face)) 17 25 (fontified t face font-lock-string-face) 25 31 (fontified t) 31 34 (fontified t face font-lock-function-name-face) 34 35 (fontified t face (rainbow-delimiters-depth-3-face)) 35 54 (fontified t face font-lock-string-face) 54 79 (fontified t) 79 80 (fontified t face (rainbow-delimiters-depth-3-face)) 80 86 (fontified t) 86 89 (fontified t face font-lock-function-name-face) 89 90 (fontified t face (rainbow-delimiters-depth-3-face)) 90 101 (fontified t face font-lock-string-face) 101 119 (fontified t) 119 120 (fontified t face (rainbow-delimiters-depth-3-face)) 120 126 (fontified t) 126 129 (fontified t face font-lock-function-name-face) 129 130 (fontified t face (rainbow-delimiters-depth-3-face)) 130 141 (fontified t face font-lock-string-face) 141 152 (fontified t) 152 153 (fontified t face (rainbow-delimiters-depth-3-face)) 153 159 (fontified t) 159 162 (fontified t face font-lock-function-name-face) 162 163 (fontified t face (rainbow-delimiters-depth-3-face)) 163 171 (fontified t face font-lock-string-face) 171 179 (fontified t) 179 180 (fontified t face (rainbow-delimiters-depth-3-face)) 180 181 (fontified t face (rainbow-delimiters-depth-2-face))) #("15" 0 2 (ivy-index 1)) #("52  (setq-default display-line-numbers-width 15)" 0 1 (swiper-line-number 52) 4 5 (fontified t face (rainbow-delimiters-depth-1-face)) 5 17 (fontified t face font-lock-keyword-face) 17 47 (fontified t) 47 48 (fontified t face (rainbow-delimiters-depth-1-face))) #("10" 0 2 (ivy-index 0)) #("10  " 0 1 (swiper-line-number 10)) #("52  (setq-default display-line-numbers-width 10)" 0 1 (swiper-line-number 52) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 17 (face font-lock-keyword-face fontified t) 17 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-1-face) fontified t)) #("dash" 0 4 (ivy-index 0)) #("80   (use-package dashboard" 0 1 (swiper-line-number 80) 5 6 (fontified t face (rainbow-delimiters-depth-1-face)) 6 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t) 18 27 (fontified t face font-lock-constant-face)) #("vter" 0 4 (ivy-index 0)) #("151  (use-package vterm)" 0 1 (swiper-line-number 151) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t) 6 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 23 (face font-lock-constant-face fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t)) #("reg" 0 3 (ivy-index 1)) #("5   (global-set-key (kbd \"C-c '\") 'comment-or-uncomment-region) ; 为选中的代码加注释/去注释" 0 1 (swiper-line-number 5) 4 5 (fontified t face (rainbow-delimiters-depth-1-face)) 5 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-2-face)) 21 25 (fontified t) 25 32 (fontified t face font-lock-string-face) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 62 (fontified t) 62 63 (fontified t face (rainbow-delimiters-depth-1-face)) 63 64 (fontified t) 64 66 (fontified t face font-lock-comment-delimiter-face) 66 79 (fontified t face font-lock-comment-face)) #("ss" 0 2 (ivy-index 0)) #("42      (evil-define-key '(normal) 'global (kbd \"<leader>ss\") 'counsel-rg);选buff" 0 1 (swiper-line-number 42) 4 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-2-face)) 9 24 (fontified t face font-lock-keyword-face) 24 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-3-face)) 27 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-3-face)) 34 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-3-face)) 44 48 (fontified t) 48 60 (fontified t face font-lock-string-face) 60 61 (fontified t face (rainbow-delimiters-depth-3-face)) 61 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-2-face)) 74 75 (fontified t face font-lock-comment-delimiter-face) 75 80 (fontified t face font-lock-comment-face)) #("counsel" 0 7 (ivy-index 7)) #("49  (global-set-key (kbd \"C-x C-f\") 'counsel-find-file)" 0 1 (swiper-line-number 49) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-2-face) fontified t) 21 25 (fontified t) 25 34 (face font-lock-string-face fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t) 35 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t)) "go-mod" "saveplace" #("sm" 0 2 (ivy-index 0)) #("115  (use-package smart-mode-line-atom-one-dark-theme)" 0 1 (swiper-line-number 115) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t) 6 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 53 (face font-lock-constant-face fontified t) 53 54 (face (rainbow-delimiters-depth-1-face) fontified t)) #("goto" 0 4 (ivy-index 0)) #("144  ;; goto last place" 0 1 (swiper-line-number 144) 5 8 (fontified t face font-lock-comment-delimiter-face) 8 23 (fontified t face font-lock-comment-face)) #("smart" 0 5 (ivy-index 0)) #("115  (use-package smart-mode-line-atom-one-dark-theme)" 0 1 (swiper-line-number 115) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t) 6 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 53 (face font-lock-constant-face fontified t) 53 54 (face (rainbow-delimiters-depth-1-face) fontified t)) #("115  (use-package smart-mode-line-atom-one-dark-theme)" 0 1 (swiper-line-number 115) 5 6 (fontified t face (rainbow-delimiters-depth-1-face)) 6 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t) 18 53 (fontified t face font-lock-constant-face) 53 54 (fontified t face (rainbow-delimiters-depth-1-face))) #("smar" 0 4 (ivy-index 1)) #("117  (use-package smart-mode-line" 0 1 (swiper-line-number 117) 5 6 (fontified t face (rainbow-delimiters-depth-1-face)) 6 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t) 18 33 (fontified t face font-lock-constant-face)) #("117  (use-package smart-mode-line" 0 1 (swiper-line-number 117) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t) 6 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 33 (face font-lock-constant-face fontified t)) #("117  (use-package smart-mode-line" 0 1 (swiper-line-number 117) 5 6 (fontified t face (rainbow-delimiters-depth-1-face)) 6 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t) 18 33 (fontified t face font-lock-constant-face)) #("117  (use-package smart-mode-line" 0 1 (swiper-line-number 117) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t) 6 9 (face font-lock-keyword-face fontified t) 9 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t) 18 33 (fontified t face font-lock-constant-face)) #("posfr" 0 5 (ivy-index 0)) #("32     ;; (ivy-posframe-mode 1)" 0 1 (swiper-line-number 32) 5 7 (fontified t) 7 10 (fontified t face font-lock-comment-delimiter-face) 10 31 (fontified t face font-lock-comment-face)) "pos" #("19   ;;   (counsel-mode 1)" 0 1 (swiper-line-number 19) 5 10 (fontified t face font-lock-comment-delimiter-face) 10 26 (fontified t face font-lock-comment-face)) #("71   (use-package dashboard" 0 1 (swiper-line-number 71) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t) 6 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 27 (face font-lock-constant-face fontified t)) #("71   (use-package dashboard" 0 1 (swiper-line-number 71) 5 6 (fontified t face (rainbow-delimiters-depth-1-face)) 6 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t) 18 27 (fontified t face font-lock-constant-face))))
(setq counsel-M-x-history '(#("r" 0 1 (ivy-index 0)) "restart-emacs" #("re" 0 2 (ivy-index 0)) "restart-emacs" "restart-emacs" #("lsp-bridge-res" 0 14 (ivy-index 0)) "lsp-bridge-restart-process" #("ter" 0 3 (ivy-index 0)) "vterm" #("nor" 0 3 (ivy-index 0)) "normal-mode" #("save" 0 4 (ivy-index 0)) "save-buffer" #("vt" 0 2 (ivy-index 0)) "vterm" "normal-mode" "restart-emacs" #("norma" 0 5 (ivy-index 0)) "normal-mode" #("normal" 0 6 (ivy-index 0)) "normal-mode" "restart-emacs" "restart-emacs" #("v" 0 1 (ivy-index 3)) "vterm" "restart-emacs" #("no" 0 2 (ivy-index 1)) "normal-mode" #("nore" 0 4 (ivy-index 0)) "ignore" "normal-mode" "restart-emacs" "restart-emacs" "restart-emacs" "restart-emacs" "normal-mode" #("list" 0 4 (ivy-index 0)) "list-packages" #("p" 0 1 (ivy-index 0)) "package-install" "restart-emacs" "restart-emacs" #("pack" 0 4 (ivy-index 3)) "package-install" "normal-mode" #("vter" 0 4 (ivy-index 0)) "vterm" #("go" 0 2 (ivy-index 0)) "goto-last-change" "restart-emacs" "vterm" "save-buffer" #("dire" 0 4 (ivy-index 0)) "dired" #("cd" 0 2 (ivy-index 0)) #("restart-emacs" 0 13 (ivy-index 0)) "vterm" "vterm" #("sur" 0 3 (ivy-index 0)) "evil-surround-mode" "evil-surround-mode" "evil-surround-mode" "evil-surround-mode" "package-install" "goto-last-change" #("indent-ri" 0 9 (ivy-index 2)) "indent-rigidly-right" #("goto" 0 4 (ivy-index 0)) "goto-last-change" #("lisp" 0 4 (ivy-index 1)) "lisp-mode" "go-mode" "go-mode" "counsel-grep-or-swiper" #("counsel-gre" 0 11 (ivy-index 2)) "counsel-grep-or-swiper" #("sy" 0 2 (ivy-index 0)) "lsp-bridge-workspace-list-symbols" "go-mode" "package-install" #("lsp" 0 3 (ivy-index 5)) "lsp-bridge-mode" "goto-last-change" #("tag" 0 3 (ivy-index 24)) "projectile-find-tag" "list-tags" "find-tag" #("counsel-fzf" 0 11 (ivy-index 0)) #("counsel-bu" 0 10 (ivy-index 0)) "counsel-buffer-or-recentf" #("counsel-" 0 8 (ivy-index 8)) "counsel-ibuffer" "counsel-cl" #("counsel-grep" 0 12 (ivy-index 0)) #("counsel-ag" 0 10 (ivy-index 0)) #("counsel" 0 7 (ivy-index 0)) #("counsel-rg" 0 10 (ivy-index 0)) #("counsel-search" 0 14 (ivy-index 0)) "normal-mode" "list-packages" "goto-last-change"))
(setq file-name-history '(#("/Users/keeyu/code/company/ures/src/ures/main.go" 0 47 (ivy-index 0)) #("/Users/keeyu/code/self/new-tool/watermark/main.go" 0 49 (ivy-index 8)) #("/Users/keeyu/code/self/new-tool/color/src/main.rs" 0 49 (ivy-index 3)) #("/Users/keeyu/Library/Mobile Documents/com~apple~CloudDocs/note/doc/work/card_encode.md" 0 86 (ivy-index 0)) #("/Users/keeyu/code/self/new-tool/color/target/debug/log.log" 0 58 (ivy-index 0)) #("/Users/keeyu/code/self/new-tool/" 0 32 (ivy-index 0)) #("/Users/keeyu/note/work/script.md" 0 32 (ivy-index 0)) #("/Users/keeyu/code/self/tool/color/target/debug/log.log" 0 54 (ivy-index 0)) #("/Users/keeyu/code/self/tool/color/target/debug/" 0 47 (ivy-index 0)) #("/Users/keeyu/code/self/tool/color/src/main.rs" 0 45 (ivy-index 2)) #("/Users/keeyu/" 0 13 (ivy-index 0)) #("/Users/keeyu/code/self/tool/color/src/" 0 38 (ivy-index 0)) #("/Users/keeyu/code/self/tool/color/" 0 34 (ivy-index 0)) #("/Users/keeyu/.emacs.d/lisp/lisp.el" 0 34 (ivy-index 1)) #("/Users/keeyu/code/self/new-tool/watermark/" 0 42 (ivy-index 0)) #("/Users/keeyu/code/github/httpfs/" 0 32 (ivy-index 0)) #("/Users/keeyu/code/self/go-test/staff-notify/" 0 44 (ivy-index 2)) #("/Users/keeyu/code/company/probation/src/probation/admin/" 0 56 (ivy-index 0)) #("/Users/keeyu/code/company/probation/src/probation/admin/main.go" 0 63 (ivy-index 12)) #("/Users/keeyu/code/company/probation/src/probation/" 0 50 (ivy-index 0)) #("/Users/keeyu/note/" 0 18 (ivy-index 0)) #("/Users/keeyu/.emacs.d/lisp/" 0 27 (ivy-index 7)) #("/Users/keeyu/.emacs.d/init.el" 0 29 (ivy-index 1)) #("/Users/keeyu/.emacs.d/lisp/#keymap.el#" 0 38 (ivy-index 0)) #("/Users/keeyu/.emacs.d/" 0 22 (ivy-index 0)) #("/Users/keeyu/note/aganda.md" 0 27 (ivy-index 2)) #("/Users/keeyu/code/github/lsp-bridge/lsp_bridge.py" 0 49 (ivy-index 1)) #("/Users/keeyu/code/self/quant/" 0 29 (ivy-index 0)) #("/Users/keeyu/code/github/lsp-bridge/" 0 36 (ivy-index 0)) #("/Users/keeyu/.emacs.d/lisp/lsp.el" 0 33 (ivy-index 8)) #("/Users/keeyu/code/company/nas_back/" 0 35 (ivy-index 0)) #("/Users/keeyu/code/company/xutil/https/" 0 38 (ivy-index 0)) #("/Users/keeyu/code/company/xutil/" 0 32 (ivy-index 0)) #("/Users/keeyu/note/edit/emacs.md" 0 31 (ivy-index 0)) #("/Users/keeyu/code/company/probation/src/probation/admin/logic/logic_inside.go" 0 77 (ivy-index 1)) #("/Users/keeyu/note/base/linux.md" 0 31 (ivy-index 1)) #("/Users/keeyu/note/base/" 0 23 (ivy-index 0)) #("/Users/keeyu/note/lang/golang.md" 0 32 (ivy-index 0)) #("/Users/keeyu/code/company/probation/src/probation/admin/model/probation.go" 0 74 (ivy-index 0)) #("/Users/keeyu/code/company/probation/src/probation/admin/logic/search.go" 0 71 (ivy-index 0)) #("/Users/keeyu/code/company/probation/src/" 0 40 (ivy-index 2)) #("/Users/keeyu/code/company/assets_lpa/demo/usb/Cargo.toml" 0 56 (ivy-index 9)) #("/Users/keeyu/code/company/assets_lpa/" 0 37 (ivy-index 0))))
(setq minibuffer-history '("make-backup-files" "auto-save-when-idle" "auto-save-visited-mode" "session" "Session" "saveplace" "goto-last" "goto" "parser" "timeout" "session" "Session" "Sessiontest" "yes" "0x01" "use-package"))
(setq extended-command-history '(#("re" 0 2 (ivy-index 0)) "restart-emacs" #("package-install" 0 15 (ivy-index 0)) #("package-in" 0 10 (ivy-index 0)) #("list" 0 4 (ivy-index 0)) "list-packages" "restart-emacs" "restart-emacs"))
(setq evil-jumps-history '((686 "/Users/keeyu/.emacs.d/lisp/keymap.el") (2351 "/Users/keeyu/.emacs.d/lisp/keymap.el") (2626 "/Users/keeyu/.emacs.d/lisp/keymap.el") (2708 "/Users/keeyu/.emacs.d/lisp/keymap.el") (2464 "/Users/keeyu/.emacs.d/lisp/keymap.el") (433 "/Users/keeyu/.emacs.d/lisp/demo.el") (513 "/Users/keeyu/.emacs.d/lisp/demo.el") (2351 "/Users/keeyu/.emacs.d/lisp/keymap.el") (3276 "/Users/keeyu/.emacs.d/lisp/keymap.el") (1941 "/Users/keeyu/code/company/ures/src/ures/main.go") (904 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2073 "/Users/keeyu/code/self/new-tool/watermark/main.go") (8388 "/Users/keeyu/.gobrew/versions/1.20.1/go/src/image/color/color.go") (1575 "/Users/keeyu/code/self/new-tool/watermark/main.go") (973 "/Users/keeyu/code/self/new-tool/watermark/main.go") (438 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2284 "/Users/keeyu/code/self/new-tool/watermark/main.go") (3027 "/Users/keeyu/code/self/new-tool/watermark/main.go") (3410 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1427 "/Users/keeyu/.gobrew/versions/1.20.1/go/src/image/names.go") (3160 "/Users/keeyu/code/self/new-tool/watermark/main.go") (20862 "/Users/keeyu/.gobrew/versions/1.20.1/go/src/os/file.go") (2811 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1606 "/Users/keeyu/go/pkg/mod/github.com/golang/freetype@v0.0.0-20170609003504-e2365dfdc4a0/freetype.go") (2921 "/Users/keeyu/code/self/new-tool/watermark/main.go") (256 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2927 "/Users/keeyu/code/self/new-tool/watermark/main.go") (3263 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2139 "/Users/keeyu/code/self/new-tool/watermark/main.go") (10142 "/Users/keeyu/go/pkg/mod/github.com/golang/freetype@v0.0.0-20170609003504-e2365dfdc4a0/freetype.go") (2480 "/Users/keeyu/code/self/new-tool/watermark/main.go") (3716 "/Users/keeyu/.gobrew/versions/1.20.1/go/src/image/image.go") (2494 "/Users/keeyu/code/self/new-tool/watermark/main.go") (719 "/Users/keeyu/code/self/new-tool/watermark/main_test.go") (2035 "/Users/keeyu/code/self/new-tool/watermark/main.go") (3212 "/Users/keeyu/.gobrew/versions/1.20.1/go/src/image/draw/draw.go") (2390 "/Users/keeyu/code/self/new-tool/watermark/main.go") (354 "/Users/keeyu/.gobrew/versions/1.20.1/go/src/image/draw/draw.go") (74 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2384 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2229 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1818 "/Users/keeyu/go/pkg/mod/github.com/golang/freetype@v0.0.0-20170609003504-e2365dfdc4a0/freetype.go") (2544 "/Users/keeyu/code/self/new-tool/watermark/main.go") (487 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2708 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2126 "/Users/keeyu/code/self/new-tool/watermark/main.go") (3024 "/Users/keeyu/code/self/new-tool/watermark/main.go") (3035 "/Users/keeyu/code/self/new-tool/watermark/main.go") (715 "/Users/keeyu/go/pkg/mod/github.com/golang/freetype@v0.0.0-20170609003504-e2365dfdc4a0/freetype.go") (9368 "/Users/keeyu/go/pkg/mod/github.com/golang/freetype@v0.0.0-20170609003504-e2365dfdc4a0/freetype.go") (6079 "/Users/keeyu/go/pkg/mod/github.com/golang/freetype@v0.0.0-20170609003504-e2365dfdc4a0/truetype/truetype.go") (9377 "/Users/keeyu/go/pkg/mod/github.com/golang/freetype@v0.0.0-20170609003504-e2365dfdc4a0/freetype.go") (3256 "/Users/keeyu/code/self/new-tool/watermark/main.go") (9355 "/Users/keeyu/go/pkg/mod/github.com/golang/freetype@v0.0.0-20170609003504-e2365dfdc4a0/freetype.go") (3260 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2149 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2616 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2122 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2614 "/Users/keeyu/code/self/new-tool/watermark/main.go") (7716 "/Users/keeyu/go/pkg/mod/github.com/golang/freetype@v0.0.0-20170609003504-e2365dfdc4a0/freetype.go") (2621 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2200 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2042 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1436 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1232 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1440 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1232 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1440 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1232 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1440 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1232 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1440 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1232 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1440 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1234 "/Users/keeyu/code/self/new-tool/watermark/main.go") (970 "/Users/keeyu/code/self/new-tool/watermark/main.go") (828 "/Users/keeyu/code/self/new-tool/watermark/main.go") (3000 "/Users/keeyu/code/self/new-tool/watermark/main.go") (921 "/Users/keeyu/code/self/new-tool/color/src/main.rs") (95 "/Users/keeyu/Library/Mobile Documents/com~apple~CloudDocs/note/doc/work/card_encode.md") (2653 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1933 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1113 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2163 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1436 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1233 "/Users/keeyu/code/self/new-tool/watermark/main.go") (2023 "/Users/keeyu/code/self/new-tool/watermark/main.go") (1427 "/Users/keeyu/code/self/new-tool/watermark/main.go") (200 "/Users/keeyu/note/work/script.md") (200 "/Users/keeyu/note/work/script.md")))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("/Users/keeyu/code/company/xutil/" (0 0 . [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]) "/Users/keeyu/Library/Mobile Documents/com~apple~CloudDocs/note/doc/" (0 1 . ["add" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]))))
